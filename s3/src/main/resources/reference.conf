# SPDX-License-Identifier: Apache-2.0

pekko.connectors.s3 {
  # whether the buffer request chunks (up to 5MB each) to "memory" or "disk"
  buffer = "memory"

  # location for temporary files, if buffer is set to "disk". If empty, uses the standard java temp path.
  disk-buffer-path = ""

  # An address of a proxy that will be used for all connections using HTTP CONNECT tunnel.
  # forward-proxy {
  #   scheme = "https"
  #   host = "proxy"
  #   port = 8080
  #   credentials {
  #     username = "username"
  #     password = "password"
  #   }
  # }

  # default values for AWS configuration
  aws {
    # If this section is absent, the fallback behavior is
    # to use the same configuration as if credentials.provider = default
    credentials {
      # anonymous requests (no auth)
      #
      # provider = anon

      # static credentials
      #
      # provider = static
      # access-key-id = ""
      # secret-access-key = ""
      # token = "" # optional

      # default: as described in software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider docs,
      # attempts to get the credentials from either:
      #   - environment variables
      #   - system properties
      #   - credentials file
      #   - EC2 credentials service
      #   - IAM / metadata
      provider = default
    }

    # If this section is absent, the fallback behavior is
    # to use the same configuration as if region.provider = default
    region {
      # static credentials
      #
      # provider = static
      #
      # This can be set to the `id` value of any of the regions defined in
      # software.amazon.awssdk.regions.Region
      # default-region = ""

      # default: as described in software.amazon.awssdk.regions.providers.DefaultAwsRegionProviderChain docs,
      # attempts to get the region from either:
      #   - environment variables
      #   - system properties
      #   - progile file
      #   - EC2 metadata
      provider = default
    }
  }

  # DEPRECATED (since Alpakka 2.0.0)
  # AWS S3 is going to retire path-style access, thus prefer the virtual-host-style access
  # https://aws.amazon.com/blogs/aws/amazon-s3-path-deprecation-plan-the-rest-of-the-story/
  #
  # Also, prefer to use the newer access-style property.
  #
  # Possible values:
  #  - false: use virtual-host style access
  #  - true: use legacy path-style access, warnings will be logged
  #  - force: use legacy path-style access, disable warnings
  #  - empty, null or absent (default): use `access-style`, which in turn defaults to virtual-host style access
  # path-style-access = false

  # Which access style to use. Prefer to use this setting over path-style-access.
  # Path-style access has been deprecated by Amazon and will not work on buckets created after September 30, 2020.
  # For alternative S3 implementations (MinIO, Rados Gateway, etc.), path-style access may continue to be required.
  # Possible values:
  #  - virtual: virtual host-style access, i.e. https://<bucket name>.s3.amazonaws.com/file/inside/bucket
  #  - path: path-style access, i.e. https://<region>.amazonaws.com/<bucket>/file/inside/bucket
  access-style = virtual

  # Custom endpoint url, used for alternate s3 implementations
  # To enable virtual-host-style access with Apache Pekko Connectors S3 use the placeholder `{bucket}` in the URL
  # eg. endpoint-url = "http://{bucket}.s3minio.pekko-connectors:9000"
  #
  # endpoint-url = null

  # Which version of the list bucket api to use. Set to 1 to use the old style version 1 API.
  # By default the newer version 2 api is used.
  list-bucket-api-version = 2

  # Object keys are validated to NOT use sub-directory selection with `..` to improve security.
  # This flag may disable the validation.
  # See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
  validate-object-key = true

  # Default settings corresponding to automatic retry of requests in an S3 stream.
  retry-settings {
    # The maximum number of additional attempts (following transient errors) that will be made to process a given
    # request before giving up.
    max-retries = 3

    # The minimum delay between request retries.
    min-backoff = 200ms

    # The maximum delay between request retries.
    max-backoff = 10s

    # Random jitter factor applied to retry delay calculation.
    random-factor = 0.0
  }

  # Settings specific to S3 multipart uploads.
  multipart-upload {

    retry-settings = ${pekko.connectors.s3.retry-settings}
  }

  # Add signature headers to requests when aws.credentials.provider is anon
  sign-anonymous-requests = true

  additional-allowed-headers {
    GetObject = []
    HeadObject = []
    PutObject = []
    InitiateMultipartUpload = []
    UploadPart = []
    CopyPart = []
    DeleteObject = []
    ListBucket = []
    MakeBucket = []
    DeleteBucket = []
    CheckBucket = []
    PutBucketVersioning = []
    GetBucketVersioning = []
  }
}
