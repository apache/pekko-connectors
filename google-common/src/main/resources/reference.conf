# SPDX-License-Identifier: Apache-2.0

pekko.connectors.google {

  credentials {
    # Used to build a list of default scopes from each of the modules, don't override
    default-scopes = ${?pekko.connectors.google.credentials.default-scopes} []
    # Override to specify custom scopes
    scopes = ${pekko.connectors.google.credentials.default-scopes}

    # Options: application-default, service-account, compute-engine, access-token, none
    # application-default first tries service-account, compute-engine then access-token
    provider = application-default

    service-account {

      # Config values have first priority, otherwise look for credentials file
      project-id = ""
      client-email = ""
      private-key = ""

      # Resolves a path to the well-known credentials file
      # See https://github.com/googleapis/google-auth-library-java/blob/master/oauth2_http/java/com/google/auth/oauth2/DefaultCredentialsProvider.java#L237
      path = ${user.home}/.config
      path = ${?APPDATA} # Windows-only
      path = ${pekko.connectors.google.credentials.service-account.path}/gcloud
      path = ${?CLOUDSDK_CONFIG}
      path = ${pekko.connectors.google.credentials.service-account.path}/application_default_credentials.json
      path = ${?GOOGLE_APPLICATION_CREDENTIALS}
    }

    # Timeout for blocking call during settings initialization to compute engine metadata server
    compute-engine.timeout = 1s

    user-access {
      project-id = ""
      client-id = ""
      client-secret = ""
      refresh-token = ""

      # Resolves a path to the well-known credentials file
      # See https://github.com/googleapis/google-auth-library-java/blob/master/oauth2_http/java/com/google/auth/oauth2/DefaultCredentialsProvider.java#L237
      path = ${user.home}/.config
      path = ${?APPDATA} # Windows-only
      path = ${pekko.connectors.google.credentials.user-access.path}/gcloud
      path = ${?CLOUDSDK_CONFIG}
      path = ${pekko.connectors.google.credentials.user-access.path}/application_default_credentials.json
      path = ${?GOOGLE_APPLICATION_CREDENTIALS}
    }

    access-token {
      project-id = ""
      token = ""
    }

    none {
      project-id = "<no-project-id>"
    }
  }

  # Standard query parameters for all Google APIs sent with every request
  user-ip = ""
  quota-user = ""
  pretty-print = false

  # The minimum size of a chunk, must be a multiple of 256 KiB. See https://github.com/googleapis/java-core/issues/86
  upload-chunk-size = 15 MiB

  # The retry settings for requests to Google APIs
  # Defaults from https://github.com/googleapis/python-api-core/blob/master/google/api_core/retry.py#L72
  retry-settings {
    max-retries = 6
    min-backoff = 1 second
    max-backoff = 1 minute
    random-factor = 0.2
  }

  # An address of a proxy that will be used for all connections using HTTP CONNECT tunnel.
  # forward-proxy {
  #   scheme = "https"
  #   host = "proxy"
  #   port = 8080
  #   credentials {
  #     username = "username"
  #     password = "password"
  #   }
  #   trust-pem = "/path/to/file.pem"
  # }

}
